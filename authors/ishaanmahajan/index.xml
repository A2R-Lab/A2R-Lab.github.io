<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A²R Lab</title>
    <link>https://a2r-lab.github.io/authors/ishaanmahajan/</link>
    <description>Recent content on A²R Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; {year} Brian Plancher</copyright>
    <lastBuildDate>Mon, 06 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://a2r-lab.github.io/authors/ishaanmahajan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://a2r-lab.github.io/authors/ishaanmahajan/</link>
      <pubDate>Mon, 06 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://a2r-lab.github.io/authors/ishaanmahajan/</guid>
      <description></description>
    </item>
    <item>
      <title>Code Generation and Conic Constraints for Model-Predictive Control on Microcontrollers with Conic-TinyMPC</title>
      <link>https://a2r-lab.github.io/publication/conictinympc/</link>
      <pubDate>Mon, 06 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://a2r-lab.github.io/publication/conictinympc/</guid>
      <description>We extend TinyMPC, an open-source, high-speed solver targeting low-power embedded control applications, to provide support for second-order cones, as well as &lt;code&gt;C++&lt;/code&gt; code generation from &lt;code&gt;Python&lt;/code&gt;, &lt;code&gt;MATLAB&lt;/code&gt;, and &lt;code&gt;Julia&lt;/code&gt; for easy deployment. Microcontroller benchmarks show that our solver provides up to a two-order-of-magnitude speedup, ranging from 10.6x to 142.7x, over state-of-the-art embedded solvers on QP and SOCP problems, and enables us to fit order-of-magnitude larger problems in memory. We validate our solver&amp;rsquo;s deployed performance through simulation and hardware experiments, including conically-constrained trajectory tracking on a 27g Crazyflie quadrotor. To get started with Conic-TinyMPC, visit our documentation, examples, and the open-source codebase at &lt;a href=&#34;https://tinympc.org/&#34;&gt;tinympc.org&lt;/a&gt;.</description>
    </item>
    <item>
      <title>TAG-K: Tail-Averaged Greedy Kaczmarz for Computationally Efficient and Performant Online Inertial Parameter Estimation</title>
      <link>https://a2r-lab.github.io/publication/kaczmarz/</link>
      <pubDate>Mon, 06 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://a2r-lab.github.io/publication/kaczmarz/</guid>
      <description>We introduce TAG-K, a lightweight extension of the Kaczmarz method that combines greedy randomized row selection for rapid convergence with tail averaging for robustness under noise and inconsistency. This design enables fast, stable parameter adaptation while retaining the low per-iteration complexity inherent to the Kaczmarz framework. We evaluate TAG-K in synthetic benchmarks and quadrotor tracking tasks against RLS, KF, and other Kaczmarz variants. TAG-K achieves 1.5x-1.9x faster solve times on laptop-class CPUs and 4.8x-20.7x faster solve times on embedded microcontrollers. More importantly, these speedups are paired with improved resilience to measurement noise and a 25% reduction in estimation error, leading to nearly 2x better end-to-end tracking performance.</description>
    </item>
    <item>
      <title>Robust and Efficient Embedded Convex Optimization through First-Order Adaptive Caching</title>
      <link>https://a2r-lab.github.io/publication/adaptivetinympc/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://a2r-lab.github.io/publication/adaptivetinympc/</guid>
      <description>In this work, we introduce First-Order Adaptive Caching, which precomputes not only select matrix operations but also their sensitivities to hyperparameter variations, enabling online hyperparameter updates without full recomputation of the cache. We demonstrate the effectiveness of our approach on a number of dynamic quadrotor tasks, achieving up to a 63.4% reduction in ADMM iterations over the use of optimized fixed hyperparameters and approaching 70% of the performance of a full cache recomputation, while reducing the computational cost from O(n^3) to O(n^2) complexity. This performance enables us to perform figure-eight trajectories on a 27g tiny quadrotor under wind disturbances.</description>
    </item>
  </channel>
</rss>
